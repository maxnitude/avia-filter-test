{"version":3,"sources":["components/Filters/Filters.js","components/TicketSegment/TicketSegment.js","components/Ticket/Ticket.js","components/TicketList/TicketList.js","App.js","index.js"],"names":["Filters","sorting","filtering","filters","airlinesList","handleFilter","key","value","validator","replace","className","name","type","onClick","checked","oneTransfer","onChange","e","target","withoutTransfer","placeholder","priceFrom","priceTo","length","map","item","index","selectedAirlines","includes","uid","caption","TicketSegment","segment","hours","travelDuration","toFixed","minutes","travelDurationHours","travelDurationMinutes","departureTime","moment","departureDate","format","toLowerCase","arrivalTime","arrivalDate","transfer","starting","departureCity","departureAirport","arrivalCity","arrivalAirport","airline","Ticket","ticket","flight","price","total","amount","legs","segments","TicketList","tickets","useState","counter","setCounter","maxLength","slice","newCounter","Math","min","App","allTickets","response","result","flights","setTickets","setAirlinesList","sortingType","setSortingType","setFilters","useEffect","companies","forEach","find","carrier","push","data","ascendingPrice","byHighPrice","sort","prev","next","descendingPrice","byLowPrice","flightTime","byTimeInFly","reduce","a","b","duration","filteredData","filter","some","every","mainFilter","hasOwnProperty","filteredAirlinesList","itemIndex","findIndex","airLinesFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f1c8c03.chunk.js","sourcesContent":["import \"./filters.scss\";\n\nconst Filters = ({\n  sorting,\n  filtering,\n  filters,\n  airlinesList,\n}) => {\n  \n  const handleFilter = (key, value) => {\n    filtering(key, value)\n  };\n\n  const handleSortingByAscendingPrice = () => {\n    sorting(\"Sort Ascending\");\n  }\n\n  const handleSortingByDescendingPrice = () => {\n    sorting(\"Sort Descending\");\n  }\n\n  const handleSortingByFlightTime = () => {\n    sorting(\"Sort by time\");\n  }\n\n  const validator = (value) => {\n      let changedValue = value.replace(/[^\\d]/g,'');\n      return changedValue\n  }\n\n  return (\n    <div className=\"filters\">\n      <div className=\"sort\">\n        <p className=\"sort__name\"><strong>Сортировать</strong></p>\n        <label>\n          <input name=\"sort\" type=\"radio\" value=\"toHighPrice\" onClick={handleSortingByAscendingPrice} />\n          <span> - по возрастанию</span>\n        </label>\n        <label>\n          <input name=\"sort\" type=\"radio\" value=\"toLowPrice\" onClick={handleSortingByDescendingPrice} />\n          <span> - по убыванию</span>\n        </label>\n        <label>\n          <input name=\"sort\" type=\"radio\" value=\"timeInFly\" onClick={handleSortingByFlightTime} />\n          <span> - по времени в пути</span>\n        </label>\n      </div>\n      <div className=\"filter\">\n        <p className=\"filter__name\"><strong>Фильтровать</strong></p>\n        <label>\n          <input\n            type=\"checkbox\"\n            className=\"filter__oneTransfer\"\n            checked={filters.oneTransfer}\n            onChange={(e) => handleFilter(\"oneTransfer\", e.target.checked)}\n          />\n          <span>- 1 пересадка</span>\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            className=\"filter__withoutTransfer\"\n            checked={filters.withoutTransfer}\n            onChange={(e) => handleFilter(\"withoutTransfer\", e.target.checked)}\n          />\n          <span>- без пересадок</span>\n        </label>\n      </div>\n      <div className=\"price\">\n        <p className=\"price__name\"><strong>Цена</strong></p>\n        <label>\n          <span>От </span>\n          <input\n            type=\"search\"\n            placeholder=\"0\"\n            className=\"price__from\"\n            onChange={(e) => handleFilter(\"priceFrom\", validator(e.target.value))}\n            value={filters.priceFrom}\n          />\n        </label>\n        <label>\n          <span>До </span>\n          <input\n            type=\"search\"\n            placeholder=\"1000000\"\n            className=\"price__to\"\n            onChange={(e) => handleFilter(\"priceTo\", validator(e.target.value))}\n            value={filters.priceTo}\n          />\n        </label>\n      </div>\n      <div className=\"companies\">\n        <p className=\"company__name\"><strong>Авиакомпании</strong></p>\n        {airlinesList.length !== 0 &&\n          airlinesList.map((item, index) => {\n            return (\n              <label key={index}>\n                <input\n                  type=\"checkbox\"\n                  className=\"company__input\"\n                  checked={filters.selectedAirlines.includes(item.uid)}\n                  onChange={() => handleFilter(\"Select Airlines\", item.uid)}\n                />\n                - {item.caption}\n              </label>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;","import moment from \"moment\";\nimport \"moment/locale/ru\";\nimport \"./ticket-segment.scss\";\n\nconst TicketSegment = ({ segment }) => {\n  let hours = (segment.travelDuration / 60).toFixed(0),\n    minutes = segment.travelDuration % 60,\n    travelDurationHours = hours === 0 ? null : hours + \" ч\",\n    travelDurationMinutes = minutes === 0 ? null : minutes + \" мин\",\n    departureTime = moment(segment.departureDate).format(\"H:mm\"),\n    departureDate = moment(segment.departureDate).format(\"DD MMM ddd\").toLowerCase(),\n    arrivalTime = moment(segment.arrivalDate).format(\"H:mm\"),\n    arrivalDate = moment(segment.arrivalDate).format(\"DD MMM ddd\").toLowerCase();\n\n  const transfer = segment.starting ? (\n    <div className=\"transfer__count\">1 пересадка</div>\n  ) : null;\n\n  return (\n    <div className=\"flight-to\">\n      <div className=\"firstLine\">\n        <span className=\"firstLine__from\">\n          {segment.departureCity?.caption}\n        </span>\n        <span className=\"firstLine__from\">\n          , {segment.departureAirport.caption}{\" \"}\n        </span>\n        <span className=\"firstLine__uid-from\">\n          ({segment.departureAirport.uid})\n        </span>\n        <i className=\"firstLine__arrow-icon\"> &rarr; </i>\n        <span className=\"firstLine__to\">{segment.arrivalCity?.caption}</span>\n        <span className=\"firstLine__to\">\n          , {segment.arrivalAirport.caption}{\" \"}\n        </span>\n        <span className=\"firstLine__uid-to\">\n          ({segment.arrivalAirport.uid})\n        </span>\n      </div>\n      <div className=\"secondLine\">\n        <p className=\"fly-from\">\n          <span className=\"time\">{departureTime}</span>\n          <span className=\"date\">{departureDate}</span>\n        </p>\n\n        <p className=\"totalTime\">\n          {travelDurationHours} {travelDurationMinutes}\n        </p>\n        <p className=\"fly-to\">\n          <span className=\"date\">{arrivalDate}</span>\n          <span className=\"time\">{arrivalTime}</span>\n        </p>\n      </div>\n      <div className=\"transfer\">\n        <div className=\"transfer__line\">{transfer}</div>\n      </div>\n      <div className=\"companyName\">\n        <p className=\"companyName__content\">\n          Рейс выполняет: {segment.airline.caption}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default TicketSegment;\n","import Segment from '../TicketSegment/TicketSegment'\nimport './ticket.scss';\n\nconst Ticket = ({ ticket }) => {\n  return (\n    <div className=\"ticket\">\n      <div className=\"header\">\n        <div className=\"header__logo\"></div>\n        <span className=\"header__price\">{ticket.flight.price.total.amount} &#8381;</span>\n        <span className=\"header__price-info\">Стоимость для одного взрослого пассажира</span>\n      </div>\n      <div className=\"content\">\n        {ticket.flight.legs.map((item) => {\n          return item.segments.map((segment, index) => {\n            return (\n                <div key={index}>\n                    <Segment segment={segment} />\n                    <hr/>\n                </div>\n            );\n          });\n        })}\n      </div>\n      <button className=\"ticket-button\">ВЫБРАТЬ</button>\n    </div>\n  );\n};\n\nexport default Ticket;\n","import { useState } from \"react\";\nimport TicketContent from \"../Ticket/Ticket\";\nimport \"./ticket-list.scss\";\n\n\nconst TicketList = ({ tickets }) => {\n  const [counter, setCounter] = useState(2);\n  const maxLength = tickets.length;\n  const plusCounter = () => {\n    const newCounter = Math.min(maxLength, counter + 2);\n    setCounter(newCounter);\n  };\n  if (tickets.length === 0) {\n    return <h4 className=\"message-alert\">Билетов нет</h4>;\n  }\n\n  return (\n    <div className=\"ticket-list\">\n      {tickets.slice(0, counter).map((ticket, index) => {\n        return (\n          <TicketContent\n            key={index}\n            ticket={ticket}\n          />\n        );\n      })}\n\n      {maxLength <= counter ? null : (\n        <div className=\"view_more\">\n            <button onClick={plusCounter} className=\"view_more-button\">\n                <span className=\"view_more-button_sign\"></span>\n                <div className=\"view_more-button_title\">\n                    <span>Загрузить еще</span>\n                </div>\n            </button>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default TicketList;\n","import { useState, useEffect } from \"react\";\nimport Filters from \"./components/Filters/Filters\";\nimport TicketList from \"./components/TicketList/TicketList\";\nimport response from \"./flights.json\";\n\nconst App = () => {\n\n  const allTickets = response.result.flights;\n  const [tickets, setTickets] = useState(allTickets);\n  const [airlinesList, setAirlinesList] = useState([]);\n  const [sortingType, setSortingType] = useState(\"none\");\n  const [filters, setFilters] = useState({\n    priceFrom: \"\",\n    priceTo: \"\",\n    selectedAirlines: [],\n    oneTransfer: false,\n    withoutTransfer: false,\n  });\n\n  useEffect(() => {\n    const companies = [];\n    response.result.flights.forEach((ticket) => {\n      if (!companies.find((item) => item.uid === ticket.flight.carrier.uid)) {\n        companies.push(ticket.flight.carrier);\n      }\n    });\n    setAirlinesList(companies);\n  }, []);\n\n\n  const mainFilter = (data, filters) => {\n\n    let filteredData = data;\n\n    if (filters.priceFrom !== \"\") {\n      filteredData = filteredData.filter(\n        (item) => +item.flight.price.total.amount > +filters.priceFrom\n      );\n    }\n\n    if (filters.priceTo !== \"\") {\n      filteredData = filteredData.filter(\n        (item) => +item.flight.price.total.amount < +filters.priceTo\n      );\n    }\n    if (filters.selectedAirlines.length !== 0) {\n      filteredData = filteredData.filter((item) =>\n      filters.selectedAirlines.includes(item.flight.carrier.uid)\n      );\n    }\n    if (filters.oneTransfer) {\n      filteredData = filteredData.filter((item) =>\n        item.flight.legs.some((item) =>\n          item.segments.some((segment) => segment.starting)\n        )\n      );\n    }\n    if (filters.withoutTransfer) {\n      filteredData = filteredData.filter((item) =>\n        item.flight.legs.every((item) =>\n          item.segments.every((segment) => segment.starting === false)\n        )\n      );\n    }\n    return filteredData;\n  }\n\n  const sorting = (type, data = tickets) => {\n    const ascendingPrice = (data) => {\n        const byHighPrice = [...data].sort((prev, next) => {\n          return +prev.flight.price.total.amount - +next.flight.price.total.amount;\n        });\n        setTickets(byHighPrice);\n      };\n\n      const descendingPrice = (data) => {\n        const byLowPrice = [...data].sort((prev, next) => {\n          return +next.flight.price.total.amount - +prev.flight.price.total.amount;\n        });\n        setTickets(byLowPrice);\n      };\n\n      const flightTime = (data) => {\n        const byTimeInFly = [...data].sort((prev, next) => {\n          return (\n            prev.flight.legs.reduce((a, b) => a + b.duration, 0) - next.flight.legs.reduce((a, b) => a + b.duration, 0)\n          );\n        });\n        setTickets(byTimeInFly);\n      };\n\n      if (type === \"Sort Ascending\") {\n        ascendingPrice(data);\n        setSortingType(\"Sort Ascending\")\n      } else if (type === \"Sort Descending\") {\n        descendingPrice(data);\n        setSortingType(\"Sort Descending\")\n      } else if (type === \"Sort by time\") {\n        flightTime(data);\n        setSortingType(\"Sort by time\")\n      } else return data\n \n  };\n\n  const changeFilterSettings = (key, value) => {\n    const airLinesFilter = (uid) => {\n      let filteredAirlinesList = [...filters.selectedAirlines];\n      if (filteredAirlinesList.includes(uid)) {\n        const itemIndex = filteredAirlinesList.findIndex(item => item === uid);\n        filteredAirlinesList = [...filteredAirlinesList.slice(0, itemIndex),\n                            ...filteredAirlinesList.slice(itemIndex + 1)];\n      } else {\n        filteredAirlinesList.push(uid);\n      }\n      setFilters({ ...filters, selectedAirlines: filteredAirlinesList });\n    };\n\n    if (filters.hasOwnProperty(key)) {\n      setFilters({ ...filters, [key]: value })\n\n    } else if (key === \"Select Airlines\") {\n      airLinesFilter(value)\n    }\n  }\n\n  useEffect(() => {\n    setTickets(() => sorting(sortingType, mainFilter(allTickets, filters)));\n  }, [allTickets, filters, sortingType]);\n\n\n  return (\n    <div className=\"app\">\n      <Filters\n        className=\"filters\"\n        sorting={sorting}\n        filtering={changeFilterSettings}\n        filters={filters}\n        airlinesList={airlinesList}\n      />\n      <TicketList tickets={tickets} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.scss\";\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}